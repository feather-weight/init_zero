services:
  mongo:
    image: ${MDB_IMAGE}
    container_name: ${MDB_CONTAINER_NAME}
    restart: unless-stopped
    command: mongod --port ${MDB_PORT}
    ports:
      - "${MDB_PORT}:${MDB_PORT}"
    volumes:
      - "${VOLUME}:/data/db"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: ${BE_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - API_BASE=${API_BASE}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB_NAME=${MONGO_DB}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${BE_INTERNAL_PORT}
    working_dir: ${WORKING_DIR}
    command: uvicorn app.main:app --host 0.0.0.0 --port ${BE_INTERNAL_PORT}
    depends_on:
      - mongo
    ports:
      - "${BE_PORT}:${BE_INTERNAL_PORT}"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${FE_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_API_BASE=${NEXT_PUBLIC_API_BASE}
      - NEXT_PUBLIC_BE_URL=${BE_URL}
      - NEXT_PUBLIC_BACKEND_URL=${BE_URL}
      - NEXT_PUBLIC_PARALLAX=${NEXT_PUBLIC_PARALLAX}
      - PORT=${FE_INTERNAL_PORT}
    working_dir: ${WORKING_DIR}
    command: sh -c "npm run start -- -H 0.0.0.0 -p ${FE_INTERNAL_PORT}"
    depends_on:
      - backend
    ports:
      - "${FE_PORT}:${FE_INTERNAL_PORT}"

networks:
  default:
    name: ${NETWORK_NAME}
